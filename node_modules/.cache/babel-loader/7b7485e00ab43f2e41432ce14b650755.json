{"ast":null,"code":"var _jsxFileName = \"G:\\\\Languages\\\\React\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport Navbar from \"./Components/Navbar\"; // import About from \"./Components/About\";\n\nimport TextForm from \"./Components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./Components/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [btntext, setbtntext] = useState(\"Enable Dark Mode\");\n  const [mode, setMode] = useState(\"light\");\n\n  const togglemode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#343a40\";\n      setbtntext(\"Enable Light Mode\");\n      setalert(\"Dark\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      setbtntext(\"Enable Dark Mode\");\n    }\n  };\n\n  const [alert, setalert] = useState(null);\n\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"Text Analyzer\",\n        mode: mode,\n        togglemode: togglemode,\n        btntext: btntext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container  my-3\",\n        children: /*#__PURE__*/_jsxDEV(TextForm, {\n          heading: \"Enter the Text to Modify\",\n          mode: mode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"fhBNviyVDE7BX3itmyUJxU/i7kQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","React","useState","Alert","App","btntext","setbtntext","mode","setMode","togglemode","document","body","style","backgroundColor","setalert","alert","showalert","message","type","msg"],"sources":["G:/Languages/React/my-app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\n\n// import About from \"./Components/About\";\nimport TextForm from \"./Components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./Components/Alert\";\n\nfunction App() {\n  const [btntext, setbtntext] = useState(\"Enable Dark Mode\");\n\n  const [mode,setMode]=useState(\"light\");\n  const togglemode=()=>{\n    if(mode===\"light\"){\n      setMode(\"dark\");\n      document.body.style.backgroundColor=\"#343a40\";\n      setbtntext(\"Enable Light Mode\");\n      setalert(\"Dark\")\n    }\n    else{\n      setMode(\"light\");\n      document.body.style.backgroundColor=\"white\";\n      setbtntext(\"Enable Dark Mode\");\n\n    }\n  }\n  const [alert, setalert] = useState(null);\n  const showalert=(message,type)=>{\nsetalert({msg:message,\ntype:type\n  })\n  }\n  return (\n    <>\n    <div >\n      <Navbar title=\"Text Analyzer\" mode={mode} togglemode={togglemode} btntext={btntext}/> \n      <Alert/>\n      <div className=\"container  my-3\">\n         <TextForm heading=\"Enter the Text to Modify\" mode={mode}  /> \n         \n      </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,kBAAD,CAAtC;EAEA,MAAM,CAACK,IAAD,EAAMC,OAAN,IAAeN,QAAQ,CAAC,OAAD,CAA7B;;EACA,MAAMO,UAAU,GAAC,MAAI;IACnB,IAAGF,IAAI,KAAG,OAAV,EAAkB;MAChBC,OAAO,CAAC,MAAD,CAAP;MACAE,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,SAApC;MACAP,UAAU,CAAC,mBAAD,CAAV;MACAQ,QAAQ,CAAC,MAAD,CAAR;IACD,CALD,MAMI;MACFN,OAAO,CAAC,OAAD,CAAP;MACAE,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,OAApC;MACAP,UAAU,CAAC,kBAAD,CAAV;IAED;EACF,CAbD;;EAcA,MAAM,CAACS,KAAD,EAAQD,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;;EACA,MAAMc,SAAS,GAAC,CAACC,OAAD,EAASC,IAAT,KAAgB;IAClCJ,QAAQ,CAAC;MAACK,GAAG,EAACF,OAAL;MACTC,IAAI,EAACA;IADI,CAAD,CAAR;EAGG,CAJD;;EAKA,oBACE;IAAA,uBACA;MAAA,wBACE,QAAC,MAAD;QAAQ,KAAK,EAAC,eAAd;QAA8B,IAAI,EAAEX,IAApC;QAA0C,UAAU,EAAEE,UAAtD;QAAkE,OAAO,EAAEJ;MAA3E;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAK,SAAS,EAAC,iBAAf;QAAA,uBACG,QAAC,QAAD;UAAU,OAAO,EAAC,0BAAlB;UAA6C,IAAI,EAAEE;QAAnD;UAAA;UAAA;UAAA;QAAA;MADH;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA;EADA,iBADF;AAYD;;GApCQH,G;;KAAAA,G;AAsCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}